[tox]
envlist = coverage-erase, py36, lint, coverage-report
skip_missing_interpreters = false

[testenv:coverage-erase]
skip_install = true
skipsdist = true
basepython = python3.6
deps = coverage
commands = coverage erase --rcfile=.coveragerc.pytest

[testenv]
commands = pytest \
  --cov=girder_worker \
  --cov-append \
  --cov-config=.coveragerc.pytest \
  # Surpress printing coverage, defer this to testenv:coverage-report
  --cov-report= \
  --mock-db \
  {posargs}

[testenv:py36]
deps = -rrequirements.txt

# This report is used to merge coverage reports from testenv and from
# the legacy tests run by ctest. When just running 'tox' it will print
# the pytest coverage report. When running ctest && tox it will print
# the combine coverage.
[testenv:coverage-report]
skip_install = true
basepython = python3.6
deps = coverage
commands =
  - coverage combine
  coverage report

[testenv:lint]
skip_install = true
basepython = python3.6
deps =
  flake8
  flake8-docstrings
  flake8-quotes
commands = flake8 {posargs} girder_worker tests

[testenv:release]
skip_install = true
skipsdist = true
basepython = python3.6
passenv =
  CIRCLE_BRANCH
  TWINE_USERNAME
  TWINE_PASSWORD
  TWINE_REPOSITORY_URL
deps =
  setuptools_scm
  twine
commands =
  python setup.py sdist
  twine upload dist/*

[pytest]
testpaths =
  tests
addopts =
  # Ignore the integration tests directory which has its own method of
  # running tests.
  --ignore=tests/integration/

[flake8]
exclude =
 # Prevent running flake8 against ansible roles downloaded for use
 # with integration framework.
 tests/integration/scripts/roles/

max-line-length = 100
# Whether to display the pep8 instructions on failure (can be quite verbose)
show-pep8 = False
# Whether to show source code for each failure
show-source = True
# Maximum cyclomatic complexity allowed
max-complexity = 14
format = pylint
inline-quotes = '
# E123 - closing bracket does not match indentation of opening bracket's line
# E226 - missing whitespace around arithmetic operator
# E241 - multiple spaces after ","
# D100 - Public module   (100) docstring missing.
# D101 - Public class    (101) docstring missing.
# D102 - Public method   (102) docstring missing.
# D103 - Public function (103) docstring missing.
# D104 - Missing docstring in public package.
# D105 - Missing docstring in magic method.
# D200 - One-line docstrings should fit on one line with quotes.
# D201 - No blank lines allowed before (201) docstring.
# D202 - No blank lines allowed after  (202) docstring.
# D203 - 1 blank required before (203) class docstring.
# D204 - 1 blank required after  (204) class docstring.
# D205 - Blank line required between one-line summary and description.
# D400 - First line should end with a period.
# D401 - First line should be in imperative mood.
# D402 - First line should not be the function's "signature".
# D403 - First word of the first line should be properly capitalized
# N802 - Function name should be lowercase.
# N803 - Argument name should be lowercase.
# N806 - Variable in function should be lowercase.
# N812 - Lowercase imported as non lowercase.
# Q003 - Change outer quotes to avoid escaping inner quotes
ignore = D100,D101,D102,D103,D104,D105,D106,D107,D200,D201,D202,D203,D204,D205,D400,D401,D402,E123,E226,E241,N802,N803,N806,N812,W503,W504,Q003
